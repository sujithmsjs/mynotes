package com.suji.streamstest;

import java.util.function.Function;
import java.util.function.Predicate;

public class MethodReference02 
{
    public static void main( String[] args )
    {
    	/*
    	 public interface Predicate<T> {
    	 	 boolean test(T t);
    	 }
    	 */
    	
    	Predicate<String> p = str -> str.isBlank();
    
    	Predicate<String> p2 = String::isBlank;
    	//Cannot make a static reference to the non-static method equalsIgnoreCase(String) from the type String
    	// Predicate<String> p3 = String::equalsIgnoreCase;
    	//Predicate<String> p4 = String::charAt; The type String does not define charAt(String) that is applicable here
    	
    	Predicate<String> p5 = String::isBlank;
    	
    	String str = "Demotest";
    	Function<String,Integer> s = str::compareTo; // str -> str.compareTo(T t)
    	//Function<String, Integer> s = String::compareTo; s->s.compareTo(?)
    	
    	
    	Function<String,Boolean> s2 = str::startsWith;
    	
    	System.out.println(s.apply("Abc"));
    	
    }
}
