Application development layers
1. Web Layer:
It exposes the services using the REST or web application.
2. Business Layer:
 It implements the business logic of an application.
3. Data Layer:
 It implements the persistence logic of the application.

Cross-cutting concerns: The responsibility of each layer is different, but there are a few common aspects that apply to all layers are Logging, Security, validation, caching, etc. These common aspects are called cross-cutting concerns.

AOP (Aspect-Oriented Programming) is a programming pattern that increases modularity by allowing the separation of the cross-cutting concern. The cross-cutting concern can now be modularized into special classes, called aspect.

Two types of AOP proxy is available: JDK dynamic proxy and CGLIB proxy.

Proxy: It is an object that is created after applying advice to a target object is called proxy. The Spring AOP implements the JDK dynamic proxy to create the proxy classes with target classes and advice invocations. These are called AOP proxy classes.

Types of AOP Advices
There are five types of AOP advices are as follows:

@Before
@After
@Around
@AfterThrowing
@AfterReturning

Resource:
https://www.javatpoint.com/spring-boot-aop

<dependency>  
<groupId>org.springframework.boot</groupId>  
<artifactId>spring-boot-starter-aop</artifactId>  
<version>2.2.2.RELEASE</version>  
</dependency>  

import org.springframework.stereotype.*;
1. Component
2. Indexed
3. Controller
4. Repository
5. Services



















