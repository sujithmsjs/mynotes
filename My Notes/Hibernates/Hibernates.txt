MySQL: 8.0.23 MySQL Community Server - GPL
java version "1.8.0_271"
http://maven.apache.org/POM/4.0.0



MySQL8Dialect(org.hibernate.dialect.MySQL8Dialect) is available in hibernate bundle 5.3.1.Final. You can use:
org.hibernate.dialect.MySQL8Dialect
runtime 'mysql:mysql-connector-java:8.0.17'


driverClassName: com.mysql.cj.jdbc.Driver
dialect: org.hibernate.dialect.MySQL8Dialect


<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>8.0.16</version>
</dependency>


Class.forName("com.mysql.jdbc.Driver");
con = DriverManager.getConnection("jdbc:mysql://localhost:3306/db7", "root", "apple");





MY CODE
---------
Project
|
|----src
|     |
|     |----main
|     |     |
|     |     |---java
|     |     |	 |
|     |     |	 |--com/suji/dao/Student.java    
|     |     |	 |--com/suji/hib/HibernateUtil.java
|     |     |	 |--com/suji/hib/TestHibernate.java    
|     |     |
|     |     |---resources
|     |     |	 |	
|                |--hibernate.cfg.xml
|
|---- pom.xml


hibernate.cfg.xml
-----------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
		"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
		"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
		
<hibernate-configuration>
	<session-factory>
		<property name="hibernate.connection.driver_class">com.mysql.cj.jdbc.Driver</property>
		<property name="hibernate.connection.password">apple</property>
		<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/hib</property>
		<property name="hibernate.connection.username">root</property>
		<property name="hibernate.dialect">org.hibernate.dialect.MySQL8Dialect</property>
		<property name="show_sql">true</property>
		<property name="hbm2ddl.auto">update</property>
		<mapping class="com.suji.dao.Student"></mapping>
	</session-factory>
</hibernate-configuration>


pom.xml
-------
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.suji</groupId>
	<artifactId>CSVTester</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<dependencies>

		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.4.10.Final</version>
		</dependency>
		
	</dependencies>

</project>


com/suji/dao/Student.java
-------------------------
package com.suji.dao;

import javax.persistence.Entity;
import javax.persistence.Id;


@Entity
public class Student {

	@Id
	private int no;
	String name;
	
	public int getNo() {
		return no;
	}
	public void setNo(int no) {
		this.no = no;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	
	@Override
	public String toString() {
		return "Student [no=" + no + ", name=" + name + "]";
	}
}


com/suji/hib/HibernateUtil.java
-------------------------------
package com.suji.hib;

import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;

public class HibernateUtil {
	private static SessionFactory sessionFactory = buildSessionFactory();

	private static SessionFactory buildSessionFactory() {
		try {
			if (sessionFactory == null) {
				StandardServiceRegistry standardRegistry = new StandardServiceRegistryBuilder()
						.configure("hibernate.cfg.xml").build();

				Metadata metaData = new MetadataSources(standardRegistry).getMetadataBuilder().build();

				sessionFactory = metaData.getSessionFactoryBuilder().build();
			}
			return sessionFactory;
		} catch (Throwable ex) {
			throw new ExceptionInInitializerError(ex);
		}
	}

	public static SessionFactory getSessionFactory() {
		return sessionFactory;
	}

	public static void shutdown() {
		getSessionFactory().close();
	}
}




com/suji/hib/TestHibernate.java
-------------------------------
package com.suji.hib;

import org.hibernate.Session;
import com.suji.dao.Student;

public class TestHibernate {
	
	public static void main(String[] args) {
		
		Session session = HibernateUtil.getSessionFactory().openSession();
		session.beginTransaction();
       
		System.out.println("Session value: "+session);
		
		Student st = new Student();	
		st.setName("Vineeth");
		st.setNo(11);
		
		//Add new Employee object
		//EmployeeEntity emp = new EmployeeEntity();
		//emp.setEmail("demo-user@mail.com");
		//emp.setFirstName("demo");
		//emp.setLastName("user");
		
		session.save(st);
		
		session.getTransaction().commit();
		HibernateUtil.shutdown();
	}
}