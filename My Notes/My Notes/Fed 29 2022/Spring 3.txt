Spring MVC Tutorial
Model-View-Controller design pattern.

A Spring MVC provides an elegant solution to use MVC in spring framework by the help of DispatcherServlet. Here, DispatcherServlet is a class that receives the incoming request and maps it to the right resource such as controllers, models, and views.


Model - A model contains the data of the application. A data can be a single object or a collection of objects.
Controller - A controller contains the business logic of an application. Here, the @Controller annotation is used to mark the class as the controller.
View - A view represents the provided information in a particular format. Generally, JSP+JSTL is used to create a view page. Although spring also supports other view technologies such as Apache Velocity, Thymeleaf and FreeMarker.
Front Controller - In Spring Web MVC, the DispatcherServlet class works as the front controller. It is responsible to manage the flow of the Spring MVC application.

the flow of Spring Web MVC

Request --> DispatcherServlet

DispatcherServlet --> HandlerMapping

DispatcherServlet -[Request]-> Controller

Controller -[ModelAndVide]->DispatcherServlet

DispatcherServlet --> ViewResolver


DispatcherServlet -->'



SEVERE: Servlet [spring] in web application [/Srping2] threw load() exception
java.io.FileNotFoundException: Could not open ServletContext resource [/WEB-INF/spring-servlet.xml]





noHandlerFound
WARNING: No mapping for GET /Srping2/hello



<%@ page isELIgnored="false"%>
