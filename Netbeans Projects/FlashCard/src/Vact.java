
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.peer.ComponentPeer;
import java.util.Random;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.border.LineBorder;
import note.util.Word;
import note.util.WordUtil;

public class Vact extends javax.swing.JFrame {

    /**
     * Creates new form Vact
     */
    public Vact() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wordTf = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        meanTa = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        noteTa = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        newMn = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        darkMode = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setSize(new java.awt.Dimension(350, 600));

        wordTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        wordTf.setMargin(new java.awt.Insets(2, 5, 2, 5));

        meanTa.setColumns(20);
        meanTa.setLineWrap(true);
        meanTa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        meanTa.setRows(5);
        meanTa.setWrapStyleWord(true);
        meanTa.setMargin(new java.awt.Insets(5, 5, 5, 5));
        meanTa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                meanTaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(meanTa);

        noteTa.setColumns(20);
        noteTa.setLineWrap(true);
        noteTa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noteTa.setRows(5);
        noteTa.setWrapStyleWord(true);
        noteTa.setMargin(new java.awt.Insets(5, 5, 5, 5));
        noteTa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noteTaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(noteTa);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        newMn.setText("File");
        newMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMnActionPerformed(evt);
            }
        });

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("New");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        newMn.add(jMenuItem2);

        jMenuBar1.add(newMn);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("View");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Change bg");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        darkMode.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        darkMode.setSelected(true);
        darkMode.setText("Dark Mode");
        darkMode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                darkModeItemStateChanged(evt);
            }
        });
        jMenu3.add(darkMode);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wordTf)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 82, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 82, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wordTf, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void addAction(){
        String wordStr = wordTf.getText().trim();
        String meanStr = meanTa.getText().trim();
        String noteStr = noteTa.getText().trim();
        Word word = new Word(wordStr,meanStr,noteStr,"");
        boolean isNew = false;
        boolean isInserted = false;
        boolean isValidated = validateInput(wordStr,meanStr,noteStr);
        
        
        if (isValidated) {     
            isNew = WordUtil.getWord(wordStr)!=null;
            //System.out.println(wordStr+" "+meanStr+" "+noteStr);
            if (!isNew) {
                isInserted = WordUtil.saveWord(word);
                if (isInserted) {
                    int n = JOptionPane.showConfirmDialog(this,"Do you want to clear the fields?" ,"Saved successfully.", JOptionPane.ERROR_MESSAGE);
                    if(n==0)
                        clearFields();
                }
            } else {
                Word word2 = WordUtil.getWord(wordStr);
                Vact vact = new Vact();
                vact.wordTf.setText(word2.getWord());
                vact.meanTa.setText(word2.getMean());
                vact.noteTa.setText(word2.getNote());
                vact.changeBG();
                vact.setVisible(true);
            }
        }else{
             JOptionPane.showMessageDialog(this,"Please enter proper notes." ,"Invalid Input", JOptionPane.ERROR_MESSAGE);
            
            
        }
    }
    
    private boolean validateInput(String wordStr, String meanStr, String noteStr) {
        int wordLen = wordStr.length();
        int meanLen = meanStr.length();
        int noteLen = noteStr.length();
        boolean isValidate = false;
        
        if(wordLen>2&&meanLen>9&&noteLen>11){
            isValidate = true;
        }
        
        return isValidate;
    }
    
    private void clearFields(){
        wordTf.setText("");
        meanTa.setText("");
        noteTa.setText("");
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addAction();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void meanTaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_meanTaKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_TAB) {
            JTextArea aj = (JTextArea) evt.getComponent();
            aj.transferFocus();
        }
    }//GEN-LAST:event_meanTaKeyPressed

    private void noteTaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noteTaKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_TAB) {
            JTextArea aj = (JTextArea) evt.getComponent();
            aj.transferFocus(); 
        }
    }//GEN-LAST:event_noteTaKeyPressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        changeBG();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void newMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMnActionPerformed
       
    }//GEN-LAST:event_newMnActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
         Vact vact = new Vact();
        vact.changeBG();
        vact.setVisible(true);
        System.out.println("New memu");
    }//GEN-LAST:event_jMenuItem2ActionPerformed
  
    private void darkModeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_darkModeItemStateChanged
        int n= evt.getStateChange();
        if(n==1)
            setDarkMode();
        else
            setDayMode();
    }//GEN-LAST:event_darkModeItemStateChanged
    private void setDarkMode(){
        meanTa.setBackground(Color.DARK_GRAY);
        wordTf.setBackground(Color.DARK_GRAY);
        noteTa.setBackground(Color.DARK_GRAY); 
        
       //noteTa.setBorder(new LineBorder(Color.YELLOW,4));
       
         
        meanTa.setForeground(Color.WHITE);
        wordTf.setForeground(Color.WHITE);
        noteTa.setForeground(Color.WHITE);
        
        Color bg = getContentPane().getBackground();
        wordTf.setCaretColor(bg);
        meanTa.setCaretColor(bg);
        noteTa.setCaretColor(bg);
    }
    
    
     private void setDayMode(){
        meanTa.setBackground(Color.WHITE);
        wordTf.setBackground(Color.WHITE);
        noteTa.setBackground(Color.WHITE); 
        
        meanTa.setForeground(Color.BLACK);
        wordTf.setForeground(Color.BLACK);
        noteTa.setForeground(Color.BLACK);
        
        wordTf.setCaretColor(Color.BLACK);
        meanTa.setCaretColor(Color.BLACK);
        noteTa.setCaretColor(Color.BLACK);
        
        
    }
    
    private Color getColor() {
        Random random = new Random();
        int n = random.nextInt(50);
        Color col = new Color(Color.HSBtoRGB(n / (float) 100, 1, 1));
        return col;
    }

    private void changeBG() {
        Color col = getColor();
        getContentPane().setBackground(col);
        jMenuBar1.setBackground(col);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vact().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem darkMode;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea meanTa;
    private javax.swing.JMenu newMn;
    private javax.swing.JTextArea noteTa;
    private javax.swing.JTextField wordTf;
    // End of variables declaration//GEN-END:variables

    private void JColorChooser() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    
}
