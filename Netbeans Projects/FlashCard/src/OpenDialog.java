
import com.jtattoo.plaf.noire.NoireLookAndFeel;
import java.awt.Container;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JViewport;
import javax.swing.ListModel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;


public class OpenDialog extends javax.swing.JFrame {

    private ResultSet resultSet;
    
    public OpenDialog() {
        initComponents();
        onLoad();
    }
    
    public void onLoad(){
        String[] dates = QueryFactory.getDates();
        String[] topics = QueryFactory.getTopics();
        dateCb.setModel(new javax.swing.DefaultComboBoxModel<>(dates));
        topicCb.setModel(new javax.swing.DefaultComboBoxModel<>(topics));
        showDetails();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sortBy = new javax.swing.ButtonGroup();
        orderBy = new javax.swing.ButtonGroup();
        imagesBy = new javax.swing.ButtonGroup();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        dateCk = new javax.swing.JCheckBox();
        topicCk = new javax.swing.JCheckBox();
        titleCk = new javax.swing.JCheckBox();
        dateCb = new javax.swing.JComboBox<>();
        topicCb = new javax.swing.JComboBox<>();
        titleTf = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        dateRb = new javax.swing.JRadioButton();
        titleRb = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        ascRb = new javax.swing.JRadioButton();
        descRb = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        bothRb = new javax.swing.JRadioButton();
        onlyImgRb = new javax.swing.JRadioButton();
        noImgRb = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        saveBtn = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        viewTopicMBtn = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        includeMBtn = new javax.swing.JCheckBoxMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Open");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search With"));

        dateCk.setText("Date");

        topicCk.setText("Topic");

        titleCk.setText("Title");

        dateCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dateCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateCbActionPerformed(evt);
            }
        });

        topicCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        titleTf.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(topicCk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topicCb, 0, 249, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(titleCk)
                        .addGap(9, 9, 9)
                        .addComponent(titleTf))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dateCk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dateCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateCk, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(dateCb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topicCk, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(topicCb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleCk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titleTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Order by"));

        sortBy.add(dateRb);
        dateRb.setText("Date");

        sortBy.add(titleRb);
        titleRb.setText("Title");

        sortBy.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("No order");

        orderBy.add(ascRb);
        ascRb.setSelected(true);
        ascRb.setText("Asc");

        orderBy.add(descRb);
        descRb.setText("desc");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dateRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titleRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ascRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descRb)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateRb)
                    .addComponent(titleRb)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ascRb)
                    .addComponent(descRb))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Images"));

        imagesBy.add(bothRb);
        bothRb.setSelected(true);
        bothRb.setText("Both");

        imagesBy.add(onlyImgRb);
        onlyImgRb.setText("Only Images");

        imagesBy.add(noImgRb);
        noImgRb.setText("No Images");
        noImgRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noImgRbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bothRb)
                .addGap(18, 18, 18)
                .addComponent(onlyImgRb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(noImgRb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bothRb)
                    .addComponent(onlyImgRb)
                    .addComponent(noImgRb))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        jMenu1.setMnemonic('F');
        jMenu1.setText("File");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setMnemonic('N');
        jMenuItem7.setText("New");
        jMenu1.add(jMenuItem7);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setMnemonic('O');
        jMenuItem4.setText("Open");
        jMenuItem4.setToolTipText("Opens all the words.");
        jMenu1.add(jMenuItem4);

        saveBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveBtn.setMnemonic('S');
        saveBtn.setText("Save");
        saveBtn.setToolTipText("Save the word to the data base.");
        jMenu1.add(saveBtn);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setMnemonic('x');
        jMenuItem5.setText("Exit");
        jMenuItem5.setToolTipText("");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("View");
        jMenu2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenu2ItemStateChanged(evt);
            }
        });

        viewTopicMBtn.setSelected(true);
        viewTopicMBtn.setText("Topics");
        viewTopicMBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                viewTopicMBtnItemStateChanged(evt);
            }
        });
        jMenu2.add(viewTopicMBtn);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Brief");
        jCheckBoxMenuItem1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem1ItemStateChanged(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("Notes");
        jCheckBoxMenuItem2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem2ItemStateChanged(evt);
            }
        });
        jMenu2.add(jCheckBoxMenuItem2);

        jMenuItem6.setText("Todays work");
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setMnemonic('I');
        jMenu3.setText("Insert");

        includeMBtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        includeMBtn.setSelected(true);
        includeMBtn.setText("Include Image");
        includeMBtn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                includeMBtnItemStateChanged(evt);
            }
        });
        includeMBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                includeMBtnActionPerformed(evt);
            }
        });
        jMenu3.add(includeMBtn);

        jMenuItem3.setText("Add Topic");
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Display");

        jMenuItem1.setText("Night Owl");
        jMenu4.add(jMenuItem1);

        jMenuItem2.setText("Early Bird");
        jMenu4.add(jMenuItem2);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addComponent(searchBtn))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void includeMBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_includeMBtnActionPerformed
        System.out.println(evt.getActionCommand());
    }//GEN-LAST:event_includeMBtnActionPerformed

    private void includeMBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_includeMBtnItemStateChanged

    }//GEN-LAST:event_includeMBtnItemStateChanged

    private void jMenu2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenu2ItemStateChanged
        
    }//GEN-LAST:event_jMenu2ItemStateChanged

    public static final JScrollPane getScrollPane(JComponent component) {
        Container p = component.getParent();
        if (p instanceof JViewport) {
            Container gp = p.getParent();
            if (gp instanceof JScrollPane) {
                return (JScrollPane) gp;
            }
        }
        return null;

    } 
    
    
    private void viewTopicMBtnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_viewTopicMBtnItemStateChanged

    }//GEN-LAST:event_viewTopicMBtnItemStateChanged

    private void jCheckBoxMenuItem1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ItemStateChanged

    }//GEN-LAST:event_jCheckBoxMenuItem1ItemStateChanged

    private void jCheckBoxMenuItem2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ItemStateChanged

    }//GEN-LAST:event_jCheckBoxMenuItem2ItemStateChanged

    private void dateCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateCbActionPerformed

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        String value = jList1.getSelectedValue();
        if (!evt.getValueIsAdjusting() && value != null) {
            System.out.println("value = " + value);
            //JOptionPane.showOptionDialog(this, "This body", "This is title", JOptionPane.QUESTION_MESSAGE, HEIGHT, null, null, "");
            OptJDialog od = new OptJDialog(this, true);
            od.setLocationRelativeTo(this);
            od.setVisible(true);
            int n = od.getOption(); // 1 is view.
            od.dispose();
            System.out.println("Option :" + n);
            if (n == 1) {
                listShowOptn();
            }else if(n==3){
                ListModel<String> model = jList1.getModel();
                Exam e = new Exam(toArrayList(model));
                e.setVisible(true);
            }
        }
  
    }//GEN-LAST:event_jList1ValueChanged
    private ArrayList<String> toArrayList(ListModel<String> model){
        ArrayList<String> list = new ArrayList<String>();
        int maximal = model.getSize();
        for (int i = 0; i < maximal; i++) {
            list.add(model.getElementAt(i));
        }
        return    list;
    }
    
    private void listShowOptn(){
            System.out.println("Selected index: " + (jList1.getSelectedIndex() + 1));
            System.out.println("resultSet :" + resultSet);

            ViewMode2 v2 = new ViewMode2(resultSet, jList1.getSelectedIndex() + 1);
            v2.setVisible(true);
            WordReader wr = new WordReader(resultSet, jList1.getSelectedIndex());
            int wordsCount = wr.getWordsCount();
            System.out.println("resultSet :" + resultSet);
            System.out.println("wordsCount : " + wordsCount);
    }
    
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
      showDetails();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void noImgRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noImgRbActionPerformed
       
   
        
        
    }//GEN-LAST:event_noImgRbActionPerformed
    
    public String wantImages() {
        String s = "";
        if(bothRb.isSelected()){
            s = "Both";
        }else if(noImgRb.isSelected()){
            s="None" ;
        }else{
            s="ALL";
        }
        return s;
    }
    
    
    
    public void showDetails() {
        QueryFactory qf = new QueryFactory();
        qf.setSelectColumns("title");
        
        
        boolean hasTitle = titleCk.isSelected();
        boolean hasDate = dateCk.isSelected();
        boolean hasTopic = topicCk.isSelected();
        String images = wantImages();
        boolean hasImages = !(images.equals("Both"));
                
        qf.setConditions(hasTitle, hasDate, hasTopic, hasImages);
        
        String dateStr = "";
        String titleStr = "";
        String topicStr = "";
        String sortByStr = "";
        
        if(dateRb.isSelected()){
            sortByStr = "entry";
        }else
        if(titleRb.isSelected()){
            sortByStr = "title";
        }else{
            sortByStr = "";
        }
        
        
    
        qf.setOrderBy(sortByStr);
        
        if(descRb.isSelected()){
            qf.setDescOrder("desc");
        }else{
            qf.setDescOrder("asc");
        }   
        
        
        if (hasDate) {
            dateStr = dateCb.getSelectedItem().toString();
        }

        if (hasTitle) {
            titleStr = titleTf.getText();
        }

        if (hasTopic) {
            topicStr = topicCb.getSelectedItem().toString();
        }
        
        qf.setValues(titleStr, dateStr, topicStr, images);
        
        
        System.out.println(qf.getQuery());
        
        
        
        System.out.println(qf.getParaCode());
        
        Vector<String> titles = qf.getTitles();
        jList1.setListData(titles);
        
        qf.setSelectColumns("title,brief,notes,topic,image");
        System.out.println(qf.getQuery());
        resultSet = qf.getTitleResultSet();
        
        
//        WordReader aw = new WordReader(titleResultSet,1);
//        for(int i=1;i<20;i++){
//            System.out.println(aw.getWordAt(i));
//        }
        
    }
    
    public void loadList(){
        
    }
    
    
    

    public static void main(String args[]) {
        try {
            NoireLookAndFeel.setTheme("Large-Font");
            UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
            
            
            /* Create and display the form */   
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new OpenDialog().setVisible(true);
                    System.out.println(NoireLookAndFeel.getTheme().getName());
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddWord.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(AddWord.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(AddWord.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(AddWord.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ascRb;
    private javax.swing.JRadioButton bothRb;
    private javax.swing.JComboBox<String> dateCb;
    private javax.swing.JCheckBox dateCk;
    private javax.swing.JRadioButton dateRb;
    private javax.swing.JRadioButton descRb;
    private javax.swing.ButtonGroup imagesBy;
    private javax.swing.JCheckBoxMenuItem includeMBtn;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton noImgRb;
    private javax.swing.JRadioButton onlyImgRb;
    private javax.swing.ButtonGroup orderBy;
    private javax.swing.JMenuItem saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.ButtonGroup sortBy;
    private javax.swing.JCheckBox titleCk;
    private javax.swing.JRadioButton titleRb;
    private javax.swing.JTextField titleTf;
    private javax.swing.JComboBox<String> topicCb;
    private javax.swing.JCheckBox topicCk;
    private javax.swing.JCheckBoxMenuItem viewTopicMBtn;
    // End of variables declaration//GEN-END:variables
}
