/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.suji.cram.gui;

import com.suji.cram.model.Card;
import com.suji.cram.model.CardDao;
import com.suji.cram.model.GroupDao;
import com.suji.cram.util.DialogUtil;
import com.suji.cram.util.TextUtil;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;




public class AddFrame extends javax.swing.JFrame {
    
  


    AddFrame(JFrame parent, Object selectedItem) {
        initComponents();
        groupCb.setSelectedItem(selectedItem);
        setLocationRelativeTo(parent);
        setSize(parent.getSize());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frontTxt = new javax.swing.JTextField();
        backTxt = new javax.swing.JTextField();
        hintTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        backAgainTxt = new javax.swing.JPasswordField();
        groupCb = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Frame");
        setMinimumSize(new java.awt.Dimension(600, 400));

        frontTxt.setColumns(50);
        frontTxt.setMargin(new java.awt.Insets(5, 5, 5, 5));

        backTxt.setColumns(20);
        backTxt.setMargin(new java.awt.Insets(5, 5, 5, 5));

        hintTxt.setColumns(30);
        hintTxt.setMargin(new java.awt.Insets(5, 5, 5, 5));
        hintTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintTxtActionPerformed(evt);
            }
        });

        jLabel1.setText("Front");

        jLabel2.setText("Back");

        jLabel3.setText("Back again");

        jLabel4.setText("Hint");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backAgainTxt.setMargin(new java.awt.Insets(5, 5, 5, 5));

        groupCb.setModel(new javax.swing.DefaultComboBoxModel<>(fillComboBox()));
        groupCb.setSelectedItem(Card.DEFAULT);
        groupCb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                groupCbActionPerformed(evt);
            }
        });

        jLabel6.setText("Group");

        jButton2.setText("Home");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backAgainTxt))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hintTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                            .addComponent(frontTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(backTxt)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(groupCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(13, 13, 13)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frontTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(backAgainTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hintTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(groupCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        try {
            addButtion();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, ex.getClass().getSimpleName(), JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void hintTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintTxtActionPerformed
        try {
            addButtion();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL Exception", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_hintTxtActionPerformed

    private void groupCbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groupCbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_groupCbActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        IndexFrame af = new IndexFrame(this);
        af.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField backAgainTxt;
    private javax.swing.JTextField backTxt;
    private javax.swing.JTextField frontTxt;
    private javax.swing.JComboBox<String> groupCb;
    private javax.swing.JTextField hintTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables

    
    private Card getCard() {
        
        //Getting details.
        String front = TextUtil.clean(frontTxt.getText());
        String back = TextUtil.clean(backTxt.getText());
        String hint = TextUtil.clean(hintTxt.getText());
        String group = TextUtil.clean(groupCb.getSelectedItem().toString());
        String backAgain  = TextUtil.clean(String.valueOf(backAgainTxt.getPassword()));
        
        Card card  = new Card(front, back, hint, group);
        
        if (card.isValid()) {
            
            //Checking ANS's match.
            if (back.equalsIgnoreCase(backAgain)) {
                return card;
            } else {
                DialogUtil.showEx(this, "Not Matched", "Ans's are not matched.");
                backAgainTxt.setText("");
                backAgainTxt.requestFocus();
                card = null;
            }
            
        } else {
            DialogUtil.showEx(this, "Invalid Entry!", "Plase Enter valid entry.");
            return null;
        }
        
        return card;
    }
    
    private void addButtion() throws SQLException {
        //First get the card.
        Card card = getCard();
        System.out.println("card: "+card);
        //If card is not null
        if (card != null) {
            boolean isSaved = CardDao.addCard(card);

            if (isSaved) {
                // If card saved successully
                DialogUtil.showMsg(this, "Success", card.getBack() + " added successfully.");
                clearFields();

            } else {
                // If card not saved successfully.
                DialogUtil.showEx(this, "Failed", "Sorry, card can't be saved.");
            }
        }
    }

    private void clearFields() {
        frontTxt.setText("");
        backTxt.setText("");
        backAgainTxt.setText("");
        hintTxt.setText("");
        frontTxt.requestFocus();
    }

    private String[] fillComboBox() {
        String[] list = CardDao.getAllGroups();
        try {
            list = GroupDao.getAllGroups();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL Exception", JOptionPane.ERROR_MESSAGE);
        }
        return list;
    }
}
