/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.suji.cram.gui;



import com.suji.cram.ds.ReAsk;
import com.suji.cram.ds.TestIterator;
import com.suji.cram.model.Card;
import com.suji.cram.model.CardDao;



import java.awt.Color;
import java.sql.SQLException;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class TestFrame extends javax.swing.JFrame {

    private TestIterator testWords;
    private ReAsk reAsk;
    private Card presentCard;
  
    
    
    
    
    TestFrame(JFrame parent, String group) {
        initComponents();
        setLocationRelativeTo(parent);
        testWords = new TestIterator(group);
        reAsk = new ReAsk(2);
        loadNextCard();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        front = new javax.swing.JTextArea();
        back = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Frame");
        setMinimumSize(new java.awt.Dimension(600, 400));

        jScrollPane1.setFocusable(false);

        front.setColumns(20);
        front.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        front.setLineWrap(true);
        front.setRows(5);
        front.setWrapStyleWord(true);
        front.setFocusable(false);
        front.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane1.setViewportView(front);

        back.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        back.setMargin(new java.awt.Insets(5, 5, 5, 5));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Fail");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hint");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Home");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(back)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 271, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        checkAns();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
       checkAns();
    }//GEN-LAST:event_backActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        try {
            JOptionPane.showMessageDialog(this, "Ans is " + presentCard.getBack(), "Answer", JOptionPane.INFORMATION_MESSAGE);
            
            boolean isUpdated = CardDao.setScore(presentCard, -3);
            System.out.println(presentCard+" "+isUpdated);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL Exception", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            JOptionPane.showMessageDialog(this, "Hint: " + presentCard.getHint(), "Hint", JOptionPane.INFORMATION_MESSAGE);
            CardDao.setScore(presentCard, -2);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL Exception", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        IndexFrame af = new IndexFrame(this);
        af.setVisible(true);
        setVisible(false);
        
    }//GEN-LAST:event_jButton4ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField back;
    private javax.swing.JTextArea front;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private Random r = new Random();
    private void changeCardColor(){
        
        int h = r.nextInt(360);
        float hue = 1f/360f * h;
        
        front.setBackground(new Color(Color.HSBtoRGB(hue, 1, 1)));
        
        if(h<30){
            front.setForeground(Color.WHITE);
        }else if(h<55){
            front.setForeground(Color.BLACK);
        }else if(h<80){
            front.setForeground(Color.WHITE);
        }else if(h<200){
            front.setForeground(Color.BLACK);
        }else if(h<290){
            front.setForeground(Color.WHITE);
        }else if(h<360){
            front.setForeground(Color.BLACK);
        }
        /*
        0-30 White
31-55 Black
56-80 White
81-200 Black
201-290 White
290 - 360 Black
        */
        
        
        
    }
    
    
     private void loadNextCard() {

        back.setBackground(Color.BLACK);
        back.setForeground(Color.WHITE);

        try {
            if (testWords.hasNext()) {
                presentCard = testWords.next();
                front.setText(presentCard.getFront());
                changeCardColor();
            } else {
                JOptionPane.showMessageDialog(this, "You're test successfully completed.\nIt will restart again.", "Completed.", JOptionPane.INFORMATION_MESSAGE);
                testWords.reset();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL Exception", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void checkAns() {
        try {
            if (reAsk.checkAnswer(presentCard, back.getText())) {

                CardDao.setScore(presentCard, 1);

                back.setBackground(Color.GREEN);
                back.setForeground(Color.WHITE);
                back.setText("");

                System.out.println("Correct: " + presentCard);
                if (reAsk.proceed()) {
                    System.out.println("Proceed further...");
                    loadNextCard();
                }
            } else {

                back.setBackground(Color.RED);
                back.setForeground(Color.WHITE);
                back.setText("");
                CardDao.setScore(presentCard, -1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex, "SQL Exception", JOptionPane.ERROR_MESSAGE);
        }

    }
}
