GIT : Distributed Version Control System.
SCM: Software/Source Configuration Management.

Version Control:
Snapshot version
Final version

Old days:
CVCS: Centralized Version Control System
- What if it fails? All lost.

Now:
DVCS: Distributed Version Control System
- Local Repository and Central Repository
- Everyone have their own copy.

---
Trunk Based Development:
- Version Control
- Branch
- Master Branch
---
Master Branch:

- Don't work on same branch.
- Always use versions, so you can't lost old code.




---
Working with GIT

#1 Create New Repository
ReadMe.md md means mark down

#2 Create a file

#3 Commit or Commit with New branch.

---
Pull Request

- New Version


----

$ cd ~
Navigate to your home (~) directory

$ mkdir repos
$ cd repos
$ cd ~/repos

$ git add locations.txt
$ git status 
$ git commit -m 'Initial commit' 

$ git push origin main
This command specifies that you are pushing to the main branch (the branch on Bitbucket) on origin (the Bitbucket server).

$ git pull --all
$ git branch
$ git branch future-plans
$ git checkout future-plans
$ git add stationlocations
$ git commit stationlocations -m 'making a change in a branch'
$ git checkout main 
$ git merge future-plans
$ git branch -d future-plans : delete

To see all local and remote branches, run:
$ git branch
$ git branch -a
$ git branch -r
$ git branch -vv
$ git branch -vva:

Stash:
------

Put your changes aside, and checkout another branch. Apply your changes later.

Working in process(WIP): Your work not yet ready to be commited.


$ git stash
$ git stash push -m <message>
$ git stash list
$ git stash apply <index>
$ git stash -u
$ git stash show <index>
$ git stash show -p <index>

$ git stash branch <new-branch> <index>
$ git stash pop
$ git stash clear


MERGE:

git merge his-branch
git merge --abort
git add .
git commit -m "merged his branch"
git log


CLEAN:

WIP: Work in Progress.

WIP > Stage > Local Repo > Remote Repo

Add: WIP > Stage
Commit: Stage > Local Repo
Push: Local Repo > Remote Repo

$ git clean -n
Shows which file would be removed.

$ git clean -n -d
Shows which file and would be removed.

$ git clean -f
Remove file

$ git clean -f -d

$ git status -s
